name: Deploy afn-capl

on:
  workflow_dispatch:
    branches: ['**']
    inputs:
      environment:
        type: environment


jobs:
  deployment:
    environment: ${{ github.event.inputs.environment || 'main' }}
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v4

    - name: Set PATH
      run: echo "/tmp/bin" >> $GITHUB_PATH


    - name: Download artifacts
      uses: actions/download-artifact@v4

    - run: make -C capi clusterctl-download
      env:
        CLUSTERCTL_SAVE_BUCKET: ${{ vars.CLUSTERCTL_SAVE_BUCKET }}
        OBJ_ACCESS_KEY: ${{ secrets.OBJ_ACCESS_KEY }}
        OBJ_SECRET_KEY: ${{ secrets.OBJ_SECRET_KEY }}

    - run: make -C capi gha-clusterctl-install

    - run: make -C capi kind-create

    - name: Setup KUBECONFIG_B64
      run: |
        kind get kubeconfig --name afn-capi > /tmp/KUBECONFIG_DATA
        echo "KUBECONFIG_B64=$(cat /tmp/KUBECONFIG_DATA | base64 -w 0)" >> $GITHUB_ENV

    - uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ env.KUBECONFIG_B64 }}

    - run: make -C capi clusterctl-init
      env:
        LINODE_TOKEN: '${{ secrets.LINODE_ACCESS_TOKEN }}'

    - run: make -C capi clusterctl-restore

    - run: make -C capi helm-install-afn-capl
      env:
        LINODE_TOKEN: ${{ secrets.LINODE_ACCESS_TOKEN }}
        AFN_CAPL_VALUES_FILE: ${{vars.AFN_CAPL_VALUES_PATH}}
        KUBECONFIG: /tmp/KUBECONFIG_DATA
    
    - run: make -C capi clusterctl-wait
    - run: make -C capi clusterctl-save

    - run: make -C capi clusterctl-upload
      env:
        CLUSTERCTL_SAVE_BUCKET: ${{ vars.CLUSTERCTL_SAVE_BUCKET }}
        OBJ_ACCESS_KEY: ${{ secrets.OBJ_ACCESS_KEY }}
        OBJ_SECRET_KEY: ${{ secrets.OBJ_SECRET_KEY }}

