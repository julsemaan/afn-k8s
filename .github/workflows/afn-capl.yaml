name: Deploy afn-capl

on:
  workflow_dispatch:
    branches: ['**']
    inputs:
      environment:
        type: environment


jobs:
  deployment:
    environment: ${{ github.event.inputs.environment || 'main' }}
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v4

    - name: Set PATH
      run: echo "/tmp/bin" >> $GITHUB_PATH


    - name: Download artifacts
      uses: actions/download-artifact@v4

    - run: mv clusterctl-save-${{ github.event.inputs.environment }} capi/.clusterctl-save || mkdir -p capi/.clusterctl-save
    
    - run: make -C capi gha-clusterctl-install

    - run: make -C capi kind-create

    - name: Setup KUBECONFIG_B64
      run: |
        kind get kubeconfig --name afn-capi > /tmp/KUBECONFIG_DATA
        echo "KUBECONFIG_B64=$(cat /tmp/KUBECONFIG_DATA | base64 -w 0)" >> $GITHUB_ENV

    - uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ env.KUBECONFIG_B64 }}

    - run: make -C capi clusterctl-init
      env:
        LINODE_TOKEN: '${{ secrets.LINODE_ACCESS_TOKEN }}'

    - run: make -C capi clusterctl-restore

    - name: 'Deploy afn-capl'
      uses: 'vimeda/helm@v1.7.0'
      with:
        release: '${{ github.event.inputs.environment }}'
        namespace: 'default'
        chart: 'capi/afn-capl'
        values: |
          linodeApiToken: ${{ secrets.LINODE_ACCESS_TOKEN }}
        value-files: >-
          [
            "${{vars.AFN_CAPL_VALUES_PATH}}"
          ]
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
    
    - run: make -C capi clusterctl-wait
    - run: make -C capi clusterctl-save

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clusterctl-save-${{ github.event.inputs.environment }}
        path: |
          capi/.clusterctl-save
